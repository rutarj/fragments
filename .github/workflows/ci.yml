# .github/workflows/ci.yml

# Continuous Integration (CI) Workflow
name: ci

# This workflow will run whenever we push commits to the `main` branch, or
# whenever there's a pull request to the `main` branch.
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# Jobs in the CI workflow
jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies and run Tests
        run: npm install-ci-test

  docker-hub:
    name: Build and Push to Docker Hub
    # Don't bother running this job unless the other three all pass
    needs: [lint, dockerfile-lint, unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      # Set up buildx for optimal Docker Builds, see:
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub using GitHub secrets, see:
      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and Push an Image to Docker Hub
      - name: Build and push
        env:
          # Define an Environment Variable with our Docker Hub Repo
          # Replace `username` with your Docker Hub username and `fragments
          # with whatever you've named your Docker Hub repo
          DOCKERHUB_REPO: rutarj21/fragments
          # Define an Environment Variable with the current git commit's
          # sha: sha-87f664e01bb5f242faa411e9e7fb9e75a58ae767
          # Use the `github` context to get this, see:
          # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
          SHA_TAG: sha-${{ github.sha }}
        uses: docker/build-push-action@v4
        with:
          push: true
          # Use 3 tags :sha-sha-7d821bd14e0d6c381dc57a5369ae1a3a9220664f, :main, and :latest
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }}, ${{ env.DOCKERHUB_REPO }}:main, ${{ env.DOCKERHUB_REPO }}:latest
